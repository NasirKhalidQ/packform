import { DatePicker, Form, Input, Space, Table, Tag, Typography } from "antd";
import { ColumnsType } from "antd/lib/table";
import Head from "next/head";
import moment from "moment-timezone";
import { RangePickerProps } from "antd/lib/date-picker/generatePicker";
moment.tz.setDefault("Australia/Melbourne");

export default function Home() {
  const onChange: RangePickerProps<any>["onChange"] = (date, dateString) => {};
  interface IOrders {
    Order_name: string;
    Product: string;
    Company_name: string;
    Name: string;
    Created_at: string;
    Total_amount: number;
    Delivered_amount: number;
  }

  const data = [
    {
      Order_name: "PO #001-I",
      Product: "Corrugated Box",
      Company_name: "Roga & Kopyta",
      Name: "Ivan Ivanovich",
      Created_at: "2020-01-02T00:00:00Z",
      Total_amount: 13.454,
      Delivered_amount: 6.727,
    },
  ];

  const [form] = Form.useForm();
  const columns: ColumnsType<IOrders> = [
    {
      title: "Order name",
      key: "Order_name",
      render: ({ Order_name, Product }: IOrders) => (
        <Typography.Paragraph>
          {Order_name}, {Product}
        </Typography.Paragraph>
      ),
    },
    {
      title: "Customer Company",
      dataIndex: "Company_name",
      key: "Order_name",
      render: (text: IOrders["Company_name"]) => (
        <Typography.Paragraph>{text}</Typography.Paragraph>
      ),
    },
    {
      title: "Customer name",
      dataIndex: "Name",
      key: "Order_name",
      render: (text: IOrders["Name"]) => (
        <Typography.Paragraph>{text}</Typography.Paragraph>
      ),
    },
    {
      title: "Order date",
      dataIndex: "Created_at",
      key: "Order_name",
      render: (text: IOrders["Created_at"]) => (
        <Typography.Paragraph>{text}</Typography.Paragraph>
      ),
    },
    {
      title: "Delivered Amount",
      dataIndex: "Delivered_amount",
      key: "Order_name",
      render: (text: IOrders["Delivered_amount"]) => (
        <Tag color="green">${text.toFixed(2)}</Tag>
      ),
    },
    {
      title: "Total Amount",
      dataIndex: "Total_amount",
      key: "Order_name",
      render: (text: IOrders["Total_amount"]) => (
        <Tag color="cyan">${text.toFixed(2)}</Tag>
      ),
    },
  ];

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Form form={form}>
        <div>
          <Typography.Title>Search</Typography.Title>
          <Input size="large" />
        </div>
        <div>
          <Typography.Paragraph>Created Date</Typography.Paragraph>
          <DatePicker.RangePicker onChange={onChange} />
        </div>
        <div>
          <Typography.Paragraph>Total Amount</Typography.Paragraph>
        </div>
        <Table
          columns={columns}
          dataSource={data}
          rowKey="Order_name"
          pagination={{ showSizeChanger: false }}
        />
      </Form>
    </div>
  );
}
